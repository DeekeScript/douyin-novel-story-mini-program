<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-01-07 11:08:56              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
 namespace App\Repository; use App\Models\Tag; use Illuminate\Contracts\Pagination\LengthAwarePaginator; use Illuminate\Http\Request; use Illuminate\Support\Facades\Validator; class TagRepository extends Repository { public function getList(Request $QiZOc) : LengthAwarePaginator { return Tag::where("\x64\x65\154\x65\x74\145\x64", "\75", 0)->when($QiZOc->get("\164\151\164\x6c\x65"), function ($SkUGn) use($QiZOc) { return $SkUGn->where("\x74\x69\164\154\145", "\154\151\x6b\145", $QiZOc->get("\x74\151\164\154\x65") . "\x25"); })->paginate($this->FfaKn, ["\52"]); } public function addTag(Request $QiZOc) : array { goto REftW; XW68B: try { goto c2JPH; wppFW: C6r4v: goto yWMAO; yWMAO: Tag::insert(["\x74\x69\164\x6c\145" => $QiZOc->post("\x74\x69\164\154\145"), "\163\x6f\162\164" => $QiZOc->post("\x73\157\162\164"), "\143\162\x65\141\x74\145\144\x5f\x61\164" => time()]); goto sKNHs; UBtyJ: throw new \Exception("\xe5\220\x8d\347\247\xb0\345\xb7\xb2\347\273\217\xe5\255\x98\xe5\234\xa8"); goto wppFW; sKNHs: return ["\x63\x6f\144\x65" => 0, "\144\x61\x74\x61" => [], "\155\x73\x67" => "\346\x88\x90\345\x8a\x9f"]; goto CHsUR; c2JPH: if (!Tag::where("\x74\x69\164\154\145", $QiZOc->post("\x74\x69\x74\x6c\145"))->where("\x64\145\154\145\x74\x65\144", 0)->count()) { goto C6r4v; } goto UBtyJ; CHsUR: } catch (\Exception $FBi7X) { return ["\143\157\144\x65" => 1, "\155\163\x67" => $FBi7X->getMessage()]; } goto Niohq; Xhnnk: return ["\x63\x6f\144\145" => 1, "\x6d\163\147" => $UGmxt->errors()->first()]; goto sqgix; REftW: $UGmxt = Validator::make($QiZOc->all(), ["\164\151\164\154\x65" => "\162\145\161\165\151\x72\145\144\174\x6d\141\170\72\63\x32"], ["\x74\x69\164\154\145\56\162\145\x71\165\x69\x72\145\x64" => "\345\x90\215\347\247\xb0\xe5\277\205\351\241\273", "\164\151\164\154\145\x2e\155\x61\170" => "\xe5\220\x8d\347\xa7\260\xe6\234\x80\xe5\244\xa7\351\225\277\xe5\272\xa6\xe4\270\215\350\xb6\205\xe8\277\207\63\x32\345\xad\227\347\xac\246"]); goto Ptg3f; sqgix: Wwplp: goto XW68B; Ptg3f: if (!$UGmxt->fails()) { goto Wwplp; } goto Xhnnk; Niohq: } public function updateTag(Request $QiZOc) : array { goto WdnMf; XAyc6: try { goto J193E; GTBsD: throw new \Exception("\345\x90\x8d\xe7\xa7\260\345\xb7\xb2\347\273\x8f\345\255\230\345\x9c\xa8"); goto teimz; teimz: riz83: goto weqdB; tP1Hy: return ["\143\157\x64\x65" => 0, "\144\x61\164\x61" => [], "\155\x73\x67" => "\346\210\220\xe5\x8a\237"]; goto ViESB; weqdB: Tag::updateOrCreate(["\151\144" => $QiZOc->post("\151\x64")], ["\164\x69\164\x6c\145" => $QiZOc->post("\164\151\164\x6c\x65"), "\163\x6f\162\x74" => $QiZOc->post("\163\157\x72\x74")]); goto tP1Hy; J193E: if (!Tag::where("\164\x69\x74\x6c\145", $QiZOc->post("\164\x69\x74\x6c\x65"))->where("\144\145\x6c\145\164\145\x64", 0)->where("\151\x64", "\x3c\76", $QiZOc->get("\151\x64"))->count()) { goto riz83; } goto GTBsD; ViESB: } catch (\Exception $FBi7X) { return ["\143\157\144\145" => 1, "\x6d\163\147" => $FBi7X->getMessage()]; } goto XF8RO; WdnMf: $UGmxt = Validator::make($QiZOc->all(), ["\x69\x64" => "\162\x65\161\165\x69\162\x65\144", "\x74\151\164\x6c\x65" => "\162\145\161\x75\x69\x72\145\144\x7c\155\x61\x78\72\63\62"], ["\x69\144\56\162\x65\x71\165\x69\162\x65\144" => "\111\104\xe5\xbf\x85\xe9\xa1\xbb", "\164\151\164\x6c\x65\x2e\162\x65\161\x75\x69\x72\x65\x64" => "\345\x90\215\347\247\260\xe5\277\x85\351\xa1\273", "\164\x69\164\x6c\145\56\x6d\141\x78" => "\xe5\220\215\xe7\xa7\xb0\xe6\x9c\x80\xe5\xa4\xa7\xe9\225\xbf\345\272\246\xe4\xb8\x8d\350\266\205\350\xbf\x87\x33\x32\345\255\x97\xe7\xac\246"]); goto B2xis; B2xis: if (!$UGmxt->fails()) { goto fUm3T; } goto cV6ti; cV6ti: return ["\143\x6f\144\145" => 1, "\x6d\x73\x67" => $UGmxt->errors()->first()]; goto hNdgE; hNdgE: fUm3T: goto XAyc6; XF8RO: } public function removeTag(Request $QiZOc) : array { goto UwHIl; NVx5V: try { Tag::updateOrCreate(["\x69\144" => $QiZOc->post("\x69\144")], ["\144\145\x6c\145\x74\145\144" => 1]); return ["\143\x6f\x64\145" => 0, "\x64\141\x74\141" => [], "\155\163\147" => "\xe6\210\x90\345\212\x9f"]; } catch (\Exception $FBi7X) { return ["\x63\x6f\x64\x65" => 1, "\155\x73\x67" => $FBi7X->getMessage()]; } goto nFBX5; Vnq5J: if (!$UGmxt->fails()) { goto L1bIe; } goto KQlS2; KQlS2: return ["\x63\157\144\145" => 1, "\x6d\163\147" => $UGmxt->errors()->first()]; goto OLYPK; UwHIl: $UGmxt = Validator::make($QiZOc->all(), ["\x69\x64" => "\x72\x65\x71\165\x69\162\145\x64"], ["\151\x64\x2e\162\x65\x71\165\151\162\x65\x64" => "\111\x44\345\277\x85\xe9\xa1\xbb"]); goto Vnq5J; OLYPK: L1bIe: goto NVx5V; nFBX5: } public function idName() : array { return Tag::where("\x64\145\x6c\145\x74\145\144", "\x3d", 0)->get(["\151\x64", "\164\151\x74\x6c\x65"])->toArray(); } }
