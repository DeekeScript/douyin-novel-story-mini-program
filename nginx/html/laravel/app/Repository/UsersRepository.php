<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-01-07 11:08:56              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
 namespace App\Repository; use App\Models\Users; use Illuminate\Contracts\Pagination\LengthAwarePaginator; use Illuminate\Http\Request; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Hash; use Illuminate\Support\Facades\Validator; class UsersRepository extends Repository { public function getList(Request $QiZOc) : LengthAwarePaginator { return Users::where("\144\x65\154\145\x74\x65\144", "\75", 0)->when($QiZOc->get("\x6e\151\143\x6b\x6e\141\x6d\145"), function ($SkUGn) use($QiZOc) { return $SkUGn->where("\156\x69\143\x6b\x6e\141\x6d\145", "\x6c\x69\153\x65", $QiZOc->get("\156\x69\143\153\x6e\141\155\x65") . "\45"); })->when($QiZOc->get("\157\x70\x65\x6e\x69\x64"), function ($SkUGn) use($QiZOc) { return $SkUGn->where("\157\x70\145\x6e\x69\x64", "\154\x69\x6b\x65", $QiZOc->get("\157\160\145\156\x69\144") . "\45"); })->when($QiZOc->get("\165\156\151\x6f\156\151\x64"), function ($SkUGn) use($QiZOc) { return $SkUGn->where("\165\156\151\157\x6e\151\x64", "\x6c\x69\153\145", $QiZOc->get("\165\x6e\151\x6f\156\151\x64") . "\x25"); })->withCount("\x70\x61\x79")->paginate($this->FfaKn, ["\x2a"]); } public function add(Request $QiZOc) : array { goto xrQyY; FlXPP: if (!$UGmxt->fails()) { goto UlV3w; } goto jHtTi; xrQyY: $UGmxt = Validator::make($QiZOc->all(), ["\156\x61\x6d\145" => "\x72\145\161\165\151\x72\x65\144\x7c\155\x61\x78\x3a\63\62"], ["\x6e\141\155\145\x2e\162\x65\x71\x75\x69\162\145\144" => "\345\x90\x8d\xe7\xa7\260\xe5\277\x85\xe9\xa1\273", "\156\x61\x6d\x65\x2e\x6d\x61\x78" => "\xe5\220\x8d\xe7\247\260\346\x9c\x80\345\xa4\247\351\225\xbf\xe5\xba\xa6\xe4\270\x8d\xe8\xb6\x85\xe8\277\x87\x33\x32\xe5\255\227\xe7\xac\246"]); goto FlXPP; drL2y: try { goto o3dGQ; o3dGQ: if (!Users::where("\156\141\155\145", $QiZOc->post("\x6e\x61\155\x65"))->where("\x64\145\154\145\x74\x65\144", 0)->count()) { goto dhPX7; } goto TUKl_; Fc2OE: Users::insert(["\x6e\x61\x6d\x65" => $QiZOc->post("\156\x61\155\x65"), "\x63\162\145\141\x74\145\x64\x5f\x61\164" => time()]); goto gkL0I; KtvLv: dhPX7: goto Fc2OE; TUKl_: throw new \Exception("\345\x90\x8d\xe7\xa7\260\345\xb7\262\xe7\273\217\345\xad\x98\xe5\x9c\250"); goto KtvLv; gkL0I: return ["\143\157\x64\x65" => 0, "\x64\x61\x74\141" => [], "\x6d\x73\147" => "\xe6\x88\220\xe5\212\x9f"]; goto jpREl; jpREl: } catch (\Exception $FBi7X) { return ["\143\157\144\145" => 1, "\155\163\147" => $FBi7X->getMessage()]; } goto Yruul; jHtTi: return ["\x63\x6f\144\x65" => 1, "\x6d\163\x67" => $UGmxt->errors()->first()]; goto ub72o; ub72o: UlV3w: goto drL2y; Yruul: } public function update(Request $QiZOc) : array { goto ZxhZh; WIPk3: if (!$UGmxt->fails()) { goto RiR5c; } goto Wj0Pf; ZxhZh: $UGmxt = Validator::make($QiZOc->all(), ["\151\144" => "\162\x65\x71\165\x69\x72\145\x64", "\156\x61\155\145" => "\x72\145\x71\165\x69\162\145\x64\x7c\155\141\170\72\63\x32"], ["\151\144\x2e\162\x65\x71\x75\151\162\x65\144" => "\x49\x44\xe5\xbf\x85\xe9\xa1\273", "\x6e\x61\x6d\x65\56\x72\145\x71\x75\151\x72\x65\x64" => "\345\x90\x8d\xe7\xa7\260\xe5\xbf\x85\xe9\xa1\273", "\156\141\x6d\x65\56\x6d\x61\170" => "\xe5\x90\x8d\xe7\xa7\xb0\xe6\234\x80\345\xa4\247\351\225\277\xe5\272\xa6\344\270\x8d\xe8\266\x85\xe8\xbf\x87\x33\62\345\255\227\347\xac\xa6"]); goto WIPk3; Wj0Pf: return ["\143\157\x64\x65" => 1, "\x6d\163\147" => $UGmxt->errors()->first()]; goto Bk7QI; KLw3q: try { goto QmY2U; m21J6: throw new \Exception("\xe5\x90\215\xe7\247\xb0\xe5\xb7\262\xe7\xbb\217\xe5\255\x98\xe5\234\xa8"); goto hTOJi; gCfTP: return ["\143\157\x64\145" => 0, "\x64\x61\164\x61" => [], "\155\163\147" => "\346\x88\x90\345\212\237"]; goto nyVpC; hTOJi: dvEjx: goto gRM3F; gRM3F: Users::updateOrCreate(["\x69\x64" => $QiZOc->post("\x69\144")], ["\x6e\141\155\x65" => $QiZOc->post("\156\x61\x6d\x65")]); goto gCfTP; QmY2U: if (!Users::where("\156\141\x6d\145", $QiZOc->post("\x6e\141\155\x65"))->where("\144\145\154\145\164\x65\144", 0)->where("\x69\x64", "\74\x3e", $QiZOc->get("\151\x64"))->count()) { goto dvEjx; } goto m21J6; nyVpC: } catch (\Exception $FBi7X) { return ["\x63\x6f\144\x65" => 1, "\x6d\163\x67" => $FBi7X->getMessage()]; } goto qKYZs; Bk7QI: RiR5c: goto KLw3q; qKYZs: } public function resetPassword(Request $QiZOc) : array { goto muB1a; muB1a: $UGmxt = Validator::make($QiZOc->all(), ["\160\141\x73\163\x77\x6f\x72\x64" => "\x72\x65\161\165\x69\x72\145\x64", "\x72\145\x5f\160\x61\163\163\x77\157\x72\144" => "\x72\x65\161\x75\x69\x72\145\x64", "\156\145\167\137\160\x61\163\x73\x77\x6f\x72\144" => "\162\x65\x71\165\x69\x72\145\x64\174\155\x61\x78\x3a\x33\x32"], ["\x70\x61\x73\163\x77\x6f\x72\x64\56\162\145\161\x75\151\x72\x65\x64" => "\xe5\xaf\x86\xe7\240\x81\xe5\277\x85\351\xa1\xbb", "\x72\145\x5f\x70\141\163\x73\167\157\162\x64\x2e\162\145\161\x75\151\162\x65\x64" => "\xe5\257\206\xe7\xa0\201\xe5\xbf\x85\xe9\241\xbb", "\156\x65\x77\137\160\141\x73\x73\167\157\x72\x64\56\x72\x65\x71\165\x69\x72\145\144" => "\xe6\x96\xb0\345\257\x86\xe7\xa0\201\xe5\277\x85\351\xa1\273", "\x6e\x65\x77\x5f\x70\x61\163\x73\x77\x6f\162\x64\56\155\x61\x78" => "\346\226\260\345\xaf\x86\xe7\240\201\346\234\200\345\xa4\247\351\x95\277\345\xba\246\344\270\x8d\xe8\266\x85\350\277\207\x33\x32\xe5\xad\227\347\254\246"]); goto NWQec; NWQec: if (!$UGmxt->fails()) { goto fEfWn; } goto t31MP; I7SjJ: try { goto WWdQt; WWdQt: if (!($QiZOc->post("\x70\x61\163\x73\167\157\162\144") !== $QiZOc->post("\162\x65\137\x70\x61\x73\163\167\157\162\144"))) { goto kFCZJ; } goto v6DQs; q1bVN: return ["\x63\x6f\x64\x65" => 1, "\155\x73\x67" => "\xe5\xaf\206\347\240\201\xe4\270\215\346\255\243\xe7\241\xae"]; goto BvwB9; SLw5Y: return ["\143\157\144\145" => 0, "\144\141\164\x61" => [], "\155\163\147" => "\xe6\210\x90\xe5\212\x9f"]; goto kcXLq; v6DQs: return ["\x63\x6f\x64\x65" => 1, "\x6d\x73\x67" => "\344\xb8\xa4\xe6\xac\xa1\xe5\257\206\xe7\240\x81\xe8\276\x93\345\205\xa5\344\xb8\215\xe4\270\x80\xe8\207\264"]; goto bgzBc; vJAXI: if (Hash::check($QiZOc->post("\160\x61\163\163\167\x6f\x72\144"), $QiZOc->user()->f_dmb)) { goto cX11w; } goto q1bVN; BGBxN: Users::updateOrCreate(["\151\x64" => Auth::id()], ["\x70\141\163\x73\167\157\162\x64" => Hash::make($QiZOc->post("\156\145\167\x5f\x70\141\x73\163\x77\157\162\144"))]); goto SLw5Y; BvwB9: cX11w: goto BGBxN; bgzBc: kFCZJ: goto vJAXI; kcXLq: } catch (\Exception $FBi7X) { return ["\143\x6f\144\x65" => 1, "\x6d\163\x67" => $FBi7X->getMessage()]; } goto yopCe; t31MP: return ["\x63\157\x64\145" => 1, "\x6d\163\x67" => $UGmxt->errors()->first()]; goto V1DdT; V1DdT: fEfWn: goto I7SjJ; yopCe: } public function remove(Request $QiZOc) : array { goto vo0Rp; cnJ5r: if (!$UGmxt->fails()) { goto VB4B3; } goto FM7mH; vo0Rp: $UGmxt = Validator::make($QiZOc->all(), ["\x69\144" => "\x72\145\x71\165\x69\x72\145\144"], ["\151\144\56\162\145\161\165\151\162\145\x64" => "\111\x44\345\xbf\x85\351\xa1\xbb"]); goto cnJ5r; FM7mH: return ["\x63\x6f\144\145" => 1, "\x6d\x73\x67" => $UGmxt->errors()->first()]; goto swetq; swetq: VB4B3: goto JSA2V; JSA2V: try { Users::updateOrCreate(["\151\x64" => $QiZOc->post("\151\x64")], ["\x64\x65\x6c\145\164\145\x64" => 1]); return ["\x63\157\144\145" => 0, "\x64\141\x74\141" => [], "\x6d\163\147" => "\346\210\x90\345\212\x9f"]; } catch (\Exception $FBi7X) { return ["\143\x6f\x64\x65" => 1, "\155\x73\147" => $FBi7X->getMessage()]; } goto X_PqT; X_PqT: } }
