<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2024-01-07 11:08:56              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
 namespace App\Repository; use App\Models\Cate; use Illuminate\Contracts\Pagination\LengthAwarePaginator; use Illuminate\Http\Request; use Illuminate\Support\Facades\Validator; class CateRepository extends Repository { public function getList(Request $QiZOc) : LengthAwarePaginator { return Cate::where("\144\145\x6c\x65\x74\145\x64", "\x3d", 0)->when($QiZOc->get("\164\x69\164\x6c\x65"), function ($SkUGn) use($QiZOc) { return $SkUGn->where("\164\x69\164\x6c\x65", "\154\151\153\145", $QiZOc->get("\164\151\164\x6c\145") . "\45"); })->paginate($this->FfaKn, ["\52"]); } public function addCate(Request $QiZOc) : array { goto SndUE; Z263z: try { goto yEQy_; D3tDR: Cate::insert(["\x74\x69\x74\x6c\145" => $QiZOc->post("\164\x69\x74\154\145"), "\163\157\162\164" => $QiZOc->post("\x73\157\x72\x74"), "\x63\x72\145\141\x74\x65\x64\x5f\141\x74" => time()]); goto sXXIY; wpPMu: DmvZN: goto D3tDR; yEQy_: if (!Cate::where("\164\151\164\154\145", $QiZOc->post("\164\151\164\154\145"))->where("\144\145\x6c\x65\x74\x65\x64", 0)->count()) { goto DmvZN; } goto RKy8B; sXXIY: return ["\143\157\144\x65" => 0, "\x64\x61\164\141" => [], "\155\x73\x67" => "\xe6\x88\220\xe5\x8a\x9f"]; goto pW1bU; RKy8B: throw new \Exception("\345\x90\215\xe7\247\xb0\xe5\267\xb2\347\xbb\217\xe5\255\230\xe5\234\250"); goto wpPMu; pW1bU: } catch (\Exception $FBi7X) { return ["\x63\x6f\144\145" => 1, "\x6d\163\147" => $FBi7X->getMessage()]; } goto JU0z7; J136E: return ["\143\x6f\144\145" => 1, "\x6d\163\147" => $UGmxt->errors()->first()]; goto XagyW; XagyW: imdD4: goto Z263z; SndUE: $UGmxt = Validator::make($QiZOc->all(), ["\x74\x69\164\x6c\x65" => "\162\145\x71\x75\x69\162\x65\x64\x7c\155\141\170\x3a\x33\x32"], ["\x74\151\164\x6c\145\56\162\145\161\165\151\x72\145\144" => "\xe5\x90\215\xe7\xa7\260\xe5\277\x85\xe9\241\xbb", "\x74\151\164\154\145\x2e\155\141\170" => "\xe5\x90\215\xe7\247\260\xe6\234\x80\xe5\xa4\247\xe9\x95\277\xe5\xba\xa6\344\xb8\x8d\xe8\266\x85\xe8\xbf\x87\63\62\xe5\255\227\347\254\xa6"]); goto ZBbFP; ZBbFP: if (!$UGmxt->fails()) { goto imdD4; } goto J136E; JU0z7: } public function updateCate(Request $QiZOc) : array { goto qwj3l; PmGoZ: return ["\143\157\144\145" => 1, "\x6d\x73\147" => $UGmxt->errors()->first()]; goto qQ9W3; qwj3l: $UGmxt = Validator::make($QiZOc->all(), ["\151\144" => "\x72\x65\161\165\151\162\x65\x64", "\164\151\164\x6c\x65" => "\x72\x65\161\165\x69\x72\x65\144\174\x6d\x61\x78\72\63\x32"], ["\151\x64\56\162\x65\161\x75\x69\162\x65\144" => "\111\x44\345\xbf\205\351\xa1\xbb", "\x74\151\164\154\145\56\x72\x65\161\x75\151\x72\145\x64" => "\345\x90\215\347\247\260\xe5\277\x85\351\241\xbb", "\x74\x69\164\154\145\x2e\155\141\x78" => "\345\220\x8d\347\xa7\xb0\xe6\234\x80\xe5\244\xa7\xe9\x95\277\345\xba\246\xe4\xb8\215\xe8\266\x85\xe8\277\x87\63\x32\345\255\227\347\254\xa6"]); goto Q0p3K; lebpl: try { goto gHvHl; JkRhc: Cate::updateOrCreate(["\x69\x64" => $QiZOc->post("\x69\144")], ["\164\151\164\x6c\145" => $QiZOc->post("\x74\x69\x74\x6c\x65"), "\163\157\162\164" => $QiZOc->post("\x73\157\x72\x74")]); goto ee7oJ; ndiYA: LUlH3: goto JkRhc; ee7oJ: return ["\143\157\x64\x65" => 0, "\144\141\164\141" => [], "\155\x73\x67" => "\xe6\210\x90\xe5\x8a\237"]; goto O7St3; jbtP9: throw new \Exception("\xe5\220\215\xe7\247\xb0\xe5\xb7\xb2\347\273\217\xe5\255\x98\345\x9c\250"); goto ndiYA; gHvHl: if (!Cate::where("\x74\x69\x74\154\x65", $QiZOc->post("\164\x69\x74\x6c\145"))->where("\144\x65\x6c\x65\164\145\x64", 0)->where("\x69\144", "\x3c\76", $QiZOc->get("\151\144"))->count()) { goto LUlH3; } goto jbtP9; O7St3: } catch (\Exception $FBi7X) { return ["\x63\x6f\144\x65" => 1, "\x6d\x73\147" => $FBi7X->getMessage()]; } goto CxYD0; Q0p3K: if (!$UGmxt->fails()) { goto JKD1p; } goto PmGoZ; qQ9W3: JKD1p: goto lebpl; CxYD0: } public function removeCate(Request $QiZOc) : array { goto X60tk; QDWF9: return ["\143\157\x64\x65" => 1, "\155\163\147" => $UGmxt->errors()->first()]; goto TJxax; lzHHo: if (!$UGmxt->fails()) { goto x85F9; } goto QDWF9; TJxax: x85F9: goto q0pJu; X60tk: $UGmxt = Validator::make($QiZOc->all(), ["\151\x64" => "\162\145\x71\x75\151\162\x65\144"], ["\x69\144\x2e\162\145\x71\x75\x69\x72\145\x64" => "\111\104\345\277\x85\351\241\273"]); goto lzHHo; q0pJu: try { Cate::updateOrCreate(["\151\144" => $QiZOc->post("\151\144")], ["\x64\145\x6c\x65\x74\145\144" => 1]); return ["\x63\x6f\x64\145" => 0, "\x64\141\164\x61" => [], "\x6d\163\x67" => "\346\x88\x90\xe5\x8a\x9f"]; } catch (\Exception $FBi7X) { return ["\x63\157\144\x65" => 1, "\x6d\163\147" => $FBi7X->getMessage()]; } goto ZD9Xv; ZD9Xv: } public function idName() : array { return Cate::where("\x64\x65\154\145\x74\x65\144", "\75", 0)->get(["\x69\144", "\x74\151\164\x6c\x65"])->toArray(); } }
